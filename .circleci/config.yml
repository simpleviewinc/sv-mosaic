version: 2.1

commands:
  init:
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
          version: docker23

jobs:
  Unit Tests:
    description: Runs Mosaic library unit tests
    docker:
      - image: cimg/base:current
    resource_class: large
    steps:
      - init
      - run:
          name: Run tests
          command: |
            docker compose build mosaic
            docker compose run -e CI=true --name sv-mosaic mosaic yarn test
  E2E Tests:
    description: Spins up a web server to serve static Storybook files and runs E2E tests against it using Playwright
    docker:
      - image: cimg/base:current
    resource_class: large
    steps:
      - init
      - attach_workspace:
          at: ~/project
      - run:
          name: Spin up containers
          command: |
            docker compose build mosaic sb-server e2e-tests
            docker compose up -d mosaic sb-server e2e-tests
      - run:
          name: Copy Storybook static files
          command: docker cp storybook-static sb-server:/app/storybook-static
      - run:
          name: Mark server as ready
          command: docker compose exec sb-server touch /app/storybook-static/ready
      - run:
          name: Attach to container
          command: docker container attach e2e-tests
  Build Mosaic Dist:
    description: Builds Mosaic library distribution files and persists them to the pipeline workspace at ~/project/dist
    docker:
      - image: cimg/base:current
    resource_class: large
    steps:
      - init
      - run:
          name: Build Mosaic distribution
          command: |
            docker compose build mosaic
            docker compose run --name sv-mosaic mosaic yarn build
      - run:
          name: Extract dist files
          command: |
            docker cp sv-mosaic:/app/dist dist
      - persist_to_workspace:
          root: ~/project
          paths:
              - dist
  Consumer Tests:
    description: Ensures all modules that should be importable from the built library, can be
    docker:
      - image: cimg/base:current
    steps:
      - init
      - run:
          name: Build Mosaic image
          command: docker compose build mosaic
      - run:
          name: Build and bring up consumer tests
          command: |
            docker compose build consumer-tests
            docker compose up --exit-code-from consumer-tests consumer-tests
  Build SB Static:
    description: Builds Storybook 8 static files and persists them to the pipeline workspace at ~/project/storybook-static
    docker:
      - image: cimg/base:current
    resource_class: large
    steps:
      - init
      - run:
          name: Build static Storybook files
          command: |
            docker compose build mosaic
            docker compose build sb8
            docker compose run --name sv-mosaic-sb8 sb8 yarn build
      - run:
          name: Extract static files
          command: |
            docker cp sv-mosaic-sb8:/app/storybook-static storybook-static
      - persist_to_workspace:
          root: ~/project
          paths:
              - storybook-static
  Publish SB Static:
    description: Checks in the static storybook files to the simpleviewinc/sv-mosaic GitHub repo which triggers a GitHub pages build
    docker:
      - image: cimg/base:current
    resource_class: large
    steps:
      - init
      - attach_workspace:
          at: ~/project
      - add_ssh_keys:
          fingerprints:
            - 90:c4:82:92:d0:82:28:9d:f4:c9:d0:25:27:1e:07:50
      - run:
          name: Spin up publishing container
          command: |
            docker compose build publisher
            docker compose run -d -e CIRCLE_BRANCH=${CIRCLE_BRANCH} --name sv-mosaic-publisher publisher
      - run:
          name: Copy SSH
          command: |
            # Copy base container's .ssh to publishing container's .ssh
            docker cp ~/.ssh sv-mosaic-publisher:/root/.ssh
            # Give ~/.ssh and the keys inside the correct ownership and permissions
            docker exec -t sv-mosaic-publisher sh -c "chmod 700 ~/.ssh && chmod 600 ~/.ssh/* && chown -R root:root ~/.ssh"
            # Replace the base container's home path with the publishing container's home path in the .ssh/config file
            docker exec -t sv-mosaic-publisher sh -c "sed -i 's#/home/circleci#/root#g' /root/.ssh/config"
      - run:
          name: Add github to known_hosts
          command: docker exec -t sv-mosaic-publisher sh -c "ls -la ~/.ssh && ssh-keyscan github.com >> ~/.ssh/known_hosts"
      - run:
          name: Copy static files into container
          command: docker cp storybook-static/. sv-mosaic-publisher:/app/docs
      - run:
          name: Publish to Github pages
          command: docker exec -t sv-mosaic-publisher yarn publish:github-pages
  Publish to NPM:
    description: Publishes distribution files to both @simpleview/sv-mosaic and @simpleview/sv-mosaic-types on NPM
    docker:
      - image: cimg/base:current
    resource_class: large
    steps:
      - init
      - attach_workspace:
          at: ~/project
        # This isn't the way to do this, we should probably be
        # comitting these containers to new images. It only works
        # because we're mounting sv-mosaic-lib/sv-mosaic-types
        # volumes to all new mosaic/mosaic-types containers
      - run:
          name: Publish @simpleview/sv-mosaic
          command: |
            docker compose build mosaic
            docker compose up mosaic
            docker cp dist/. mosaic:/app/dist
            docker cp README.md mosaic:/app/README.md
            docker cp LICENSE mosaic:/app/LICENSE
            docker compose run -e CIRCLE_BRANCH=${CIRCLE_BRANCH} -e CIRCLE_SHA1=${CIRCLE_SHA1} -e NPM_TOKEN=${NPM_TOKEN} mosaic yarn publish:npm
      - run:
          name: Publish @simpleview/sv-mosaic-types
          command: |
            docker compose build mosaic-types
            docker compose up mosaic-types
            docker cp dist/types/. mosaic-types:/app/types
            docker compose run -e CIRCLE_BRANCH=${CIRCLE_BRANCH} -e CIRCLE_SHA1=${CIRCLE_SHA1} -e NPM_TOKEN=${NPM_TOKEN} mosaic-types yarn publish:npm

workflows:
  main:
    jobs:
      - Build Mosaic Dist:
          context: default
          filters:
            branches:
              only:
                - /pull.*/
                - /.*publish-ci$/
                - develop
                - qa
                - staging
                - master
      - Build SB Static:
          context: default
          filters:
            branches:
              only:
                - /pull.*/
                - /.*publish-ci$/
                - develop
                - qa
                - staging
                - master
      - Unit Tests:
          context: default
          requires:
            - Build Mosaic Dist
          filters:
            branches:
              only:
                - /pull.*/
                - /.*publish-ci$/
                - develop
                - qa
                - staging
                - master
      - E2E Tests:
          context: default
          requires:
            - Build SB Static
          filters:
            branches:
              only:
                - /pull.*/
                - /.*publish-ci$/
                - develop
                - qa
                - staging
                - master
      - Consumer Tests:
          context: default
          requires:
            - Build Mosaic Dist
          filters:
            branches:
              only:
                - /pull.*/
                - /.*publish-ci$/
                - develop
                - qa
                - staging
                - master
      - Publish SB Static:
          context: default
          requires:
            - Build SB Static
            - Unit Tests
            - E2E Tests
            - Consumer Tests
          filters:
            branches:
              only:
                - /.*publish-ci$/
                - develop
                - qa
                - staging
                - master
      - Publish to NPM:
          context: default
          requires:
            - Build Mosaic Dist
            - Unit Tests
            - E2E Tests
            - Consumer Tests
          filters:
            branches:
              only:
                - /.*publish-ci$/
                - staging
                - master
