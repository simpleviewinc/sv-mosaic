import{j as c}from"./jsx-runtime-DiwAibxM.js";import{r as d}from"./index-Btj5Fd67.js";import{C as y}from"./Checkbox-3bvh3g8i.js";import{s as F,C as k}from"./theme-D38K4W-Z.js";import{c as I}from"./containerQuery-CksQJzsL.js";import{a as S,g as N,s as $,d as g,u as E,_ as M,e as R,f as _}from"./generateUtilityClasses-8vC7aVzu.js";import{u as b,f as L}from"./formControlState-B0dK5Yiw.js";function P(r,e,s=o=>o){const o=[];for(const t of r)e.some(n=>s(t)===s(n))||o.push(t);for(const t of e)r.some(n=>s(t)===s(n))||o.push(t);return o}function w(r,e){if(e<1)throw new Error(`Chunk size should be more than 0, provided ${e}`);const s=[],o=Math.ceil(r.length/e);for(let t=0;t<e;t++){const n=r.slice(t*o,(t+1)*o);if(!n.length)return s;s.push(n)}return s}function T(r){return N("MuiFormGroup",r)}S("MuiFormGroup",["root","row","error"]);const U=["className","row"],B=r=>{const{classes:e,row:s,error:o}=r;return _({root:["root",s&&"row",o&&"error"]},T,e)},D=$("div",{name:"MuiFormGroup",slot:"Root",overridesResolver:(r,e)=>{const{ownerState:s}=r;return[e.root,s.row&&e.row]}})(({ownerState:r})=>g({display:"flex",flexDirection:"column",flexWrap:"wrap"},r.row&&{flexDirection:"row"})),O=d.forwardRef(function(e,s){const o=E({props:e,name:"MuiFormGroup"}),{className:t,row:n=!1}=o,h=M(o,U),u=b(),a=L({props:o,muiFormControl:u,states:["error"]}),p=g({},o,{row:n,error:a.error}),l=B(p);return c.jsx(D,g({className:R(l.root,t),ownerState:p,ref:s},h))}),z=F(O)`
	container-type: inline-size;
	container-name: ${k.CHECKBOX_LIST};
`,H=F.div`
	${I("md","CHECKBOX_LIST")} {
		display: grid;
		grid-template-columns: repeat(3,minmax(0,1fr));
	}
`,V=r=>{const e=d.useId(),{className:s,checked:o,disabled:t,id:n=e,onBlur:h,onChange:u,options:a,style:p,itemsPerColumn:l=8}=r,G=d.useCallback(({target:C})=>{const{value:f}=C,i=a.find(m=>m.value===f);if(!i)return;const x=P(o||[],[i],m=>m.value);u(x)},[o,u,a]),j=d.useMemo(()=>a.length>l*2?w(a,3):a.length>l?w(a,2):[a],[l,a]);return c.jsx(z,{className:`${s??""} listItem`,onBlur:h,style:p,children:c.jsx(H,{children:j.map((C,f)=>c.jsx("div",{children:(C||[]).map(({value:i,label:x},m)=>c.jsx("div",{children:c.jsx(y,{checked:(o||[]).some(v=>v.value===i),label:x,disabled:t,id:`${n}-${f}-${m}`,onChange:G,value:i})},i))},f))})})};export{V as C,O as F};
