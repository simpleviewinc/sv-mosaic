import{j as u}from"./jsx-runtime-DiwAibxM.js";import{r}from"./index-Btj5Fd67.js";import{C as c}from"./Form-HJjiXuUv.js";import"./Button-BzJSDP1S.js";import"./index-DIR1SwYo.js";import"./DataViewFilterSingleSelect-xyLDjYN6.js";import"./ButtonRow-iQTdUMH8.js";import"./Card.styled-DAtznKE6.js";import"./Typography-iUA5kZEF.js";import"./Checkbox-1rJEaydD.js";import"./Chip-ulzUmfU4.js";import"./CheckboxList-nyy1Of3u.js";import"./DataViewFilterDropdown-CqTisVOW.js";import"./DataViewPrimaryFilter.styled-CTVdcnW9.js";import"./useMosaicTranslation-DPUDh126.js";import"./DataViewFilterText.styled-Ci24YSz1.js";import"./theme-D38K4W-Z.js";import"./DataViewFilterNumber.styled-CiKFQiKg.js";import"./index-6dl0l4Q7.js";import"./Dialog-BYWfLX43.js";import"./index-CS6DYxP4.js";import"./SideNav-D2hLlXvZ.js";import"./Toggle-H5i5NPQc.js";import"./StyledFormControl.styled-CNCCtQwC.js";import"./RadioButton-LFlv3WCh.js";import"./Snackbar-CrdURRDn.js";import"./Drawers.styled-wRclmLCI.js";import"./TopSummary-C8DCZXx8.js";import"./Content.styled-CvEeminH.js";import"./Popover.styled-DIA1xMK6.js";import"./PageHeader-P9MDHuwd.js";import{m as C}from"./options-C_LXlRBD.js";import"./containerQuery-CksQJzsL.js";import"./testIds-C2FMCy5K.js";import"./sizes-C6oSOElx.js";import"./generateUtilityClasses-B5i8Rs7p.js";import"./createSvgIcon-CM-As40z.js";import"./Popper-BV6MzckQ.js";import"./ownerWindow-DvT1GKkC.js";import"./useIsFocusVisible-DHjyF8IZ.js";import"./createChainedFunction-BO_9K8Jh.js";import"./useTheme-DELdgGyu.js";import"./index-T5NeFSal.js";import"./index-tXhrow7Y.js";import"./useId-DwELyCdS.js";import"./useControlled-D8KJxpyu.js";import"./createSvgIcon-CAs7t9wT.js";import"./debounce-IFS8tfQQ.js";import"./formats-sBod7wm8.js";import"./FormControlLabel-2hVWRnF1.js";import"./formControlState-BAf21Shc.js";import"./ButtonBase-B2xCaBev.js";import"./getThemeProps-Fw47730D.js";import"./ChevronRight-CNo34ydh.js";import"./TitleWrapper-OgvLyBY4.js";import"./TitleText-b_QXd7Yf.js";import"./useToggle-B3mbTfSB.js";import"./ClickAwayListener-DoPvkzLf.js";import"./MoreVert-B1D8IEMN.js";import"./Spinner-C_uMqEwM.js";import"./DataViewPrimaryFilter-Cox9kOZn.js";import"./SubtitleText-BrufIBLI.js";import"./Close-gDfoKZ0c.js";import"./TridentIcon-DUvelBIm.js";import"./Image-CNIFLnmm.js";const Nt={title:"Components/ChipList"},t=({optionCount:o,maxInitialChips:n,hasOnDelete:i})=>{const s=r.useMemo(()=>C.slice(0,o),[o]),a=r.useMemo(()=>{if(i)return l=>alert(`Option delete. New options: ${JSON.stringify(l)}`)},[i]);return u.jsx(c,{options:s,maxInitialChips:n,onDelete:a})};t.args={optionCount:25,maxInitialChips:8,hasOnDelete:!1};t.argTypes={optionCount:{name:"Number of Options"},maxInitialChips:{name:"Maximum Initial Chips"},hasOnDelete:{name:"Has onDelete Handler"}};var p,m,e;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`({
  optionCount,
  maxInitialChips,
  hasOnDelete
}: typeof Playground.args): ReactElement => {
  const options = useMemo<ChipListProps["options"]>(() => {
    return mockOptions.slice(0, optionCount);
  }, [optionCount]);
  const onDelete = useMemo(() => {
    if (!hasOnDelete) {
      return;
    }
    return (options: ChipListProps["options"]) => alert(\`Option delete. New options: \${JSON.stringify(options)}\`);
  }, [hasOnDelete]);
  return <ChipList options={options} maxInitialChips={maxInitialChips} onDelete={onDelete} />;
}`,...(e=(m=t.parameters)==null?void 0:m.docs)==null?void 0:e.source}}};const Pt=["Playground"];export{t as Playground,Pt as __namedExportsOrder,Nt as default};
