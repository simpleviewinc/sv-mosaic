import{j as c}from"./jsx-runtime-EKYJJIwR.js";import{r}from"./index-D0AnReJb.js";import{C}from"./Form-DPJ23PVO.js";import"./Button-DpopOKxc.js";import"./index-DwUqxV_F.js";import"./DataViewFilterSingleSelect-BzRfzjff.js";import"./ButtonRow-C0p2ODeQ.js";import"./Card.styled-DKRUHInp.js";import"./Typography-CID4xQqz.js";import"./Checkbox-CoU1FyDt.js";import"./Chip-Bypx1B0d.js";import"./CheckboxList-CvmUeamL.js";import"./DataViewFilterDropdown-D2WocfoV.js";import"./DataViewPrimaryFilter.styled-BbrvVw35.js";import"./useMosaicTranslation-CoWLI8L7.js";import"./DataViewFilterText.styled-H5aqHc9P.js";import"./theme-BSoCkN4E.js";import"./DataViewFilterNumber.styled-BXxqs_-I.js";import"./index-BoBd9h2u.js";import"./Dialog-DAXtZNzQ.js";import"./index-DDKsVk35.js";import"./SideNav-C5NWEHXm.js";import"./Toggle-VZ0j2DKw.js";import"./StyledFormControl.styled-BkJbr-Di.js";import"./RadioButton-D0yHXGOG.js";import"./Snackbar-DhIkxi0I.js";import"./Drawers.styled-BezXquF1.js";import"./TopSummary-DGU0JAXi.js";import"./Content.styled-B4ELWr0z.js";import"./Popover.styled-CtnFH0g_.js";import"./PageHeader-B119jF-l.js";import{m as p}from"./options-DEOzrsxm.js";import"./containerQuery-bURHYR7H.js";import"./testIds-Dso8kRSM.js";import"./sizes-C6oSOElx.js";import"./generateUtilityClasses-BA0DUeUY.js";import"./createSvgIcon-Bee5RQ5R.js";import"./Popper-xe3MJQij.js";import"./ownerWindow-DvT1GKkC.js";import"./useIsFocusVisible-CvEUtp4E.js";import"./createChainedFunction-BO_9K8Jh.js";import"./useTheme-BAqAQ4su.js";import"./index-Bqzh3Cp6.js";import"./index-SI8xS9YR.js";import"./useId-BgzzDjMB.js";import"./useControlled-DuXZYv4M.js";import"./createSvgIcon-B3veWrfC.js";import"./debounce-jQnfRpl1.js";import"./formats-sBod7wm8.js";import"./FormControlLabel-CZZVJTgF.js";import"./formControlState-BN-vhB5B.js";import"./ButtonBase-C35XO5Ki.js";import"./getThemeProps-BKaUAPTQ.js";import"./ChevronRight-DusQwXTC.js";import"./TitleWrapper-C8ENnIyi.js";import"./TitleText-C3pJVaQd.js";import"./useToggle-RmkKdcfw.js";import"./ClickAwayListener-Dkkr5f_-.js";import"./MoreVert-Db3yE7BY.js";import"./Spinner-B9uEl8uj.js";import"./DataViewPrimaryFilter-BhgtJ8qn.js";import"./SubtitleText-Bh4fpen4.js";import"./Close-D1y_W6Pv.js";import"./TridentIcon-_9gFW4SW.js";import"./Image-2FXu7LiK.js";const Nt={title:"Components/ChipList"},t=({optionCount:o,maxInitialChips:s,hasOnDelete:i})=>{const a=r.useMemo(()=>o>=0?p.slice(0,o):p,[o]),l=r.useMemo(()=>{if(i)return u=>alert(`Option delete. New options: ${JSON.stringify(u)}`)},[i]);return c.jsx(C,{options:a,maxInitialChips:s,onDelete:l})};t.args={optionCount:25,maxInitialChips:8,hasOnDelete:!1};t.argTypes={optionCount:{name:"Number of Options",control:{min:0}},maxInitialChips:{name:"Maximum Initial Chips"},hasOnDelete:{name:"Has onDelete Handler"}};var m,e,n;t.parameters={...t.parameters,docs:{...(m=t.parameters)==null?void 0:m.docs,source:{originalSource:`({
  optionCount,
  maxInitialChips,
  hasOnDelete
}: typeof Playground.args): ReactElement => {
  const options = useMemo<ChipListProps["options"]>(() => {
    return optionCount >= 0 ? mockOptions.slice(0, optionCount) : mockOptions;
  }, [optionCount]);
  const onDelete = useMemo(() => {
    if (!hasOnDelete) {
      return;
    }
    return (options: ChipListProps["options"]) => alert(\`Option delete. New options: \${JSON.stringify(options)}\`);
  }, [hasOnDelete]);
  return <ChipList options={options} maxInitialChips={maxInitialChips} onDelete={onDelete} />;
}`,...(n=(e=t.parameters)==null?void 0:e.docs)==null?void 0:n.source}}};const Pt=["Playground"];export{t as Playground,Pt as __namedExportsOrder,Nt as default};
