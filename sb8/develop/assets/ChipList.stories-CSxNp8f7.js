import{j as c}from"./jsx-runtime-EKYJJIwR.js";import{r}from"./index-DDfD_3TG.js";import{C}from"./Form-CQFKd4og.js";import"./Button-_6SRCSsN.js";import"./index-570eyads.js";import"./DataViewFilterSingleSelect-q4VhU_62.js";import"./ButtonRow-5AdSMJlC.js";import"./Card.styled-Co48KMta.js";import"./Typography-DhgnvJ03.js";import"./Checkbox-CL37ymQB.js";import"./Chip-TPBsYk2z.js";import"./CheckboxList-DKZDPSzE.js";import"./DataViewFilterDropdown-D8zsAVgS.js";import"./DataViewPrimaryFilter.styled-DOEMDM8r.js";import"./useMosaicTranslation-CCZzHAOs.js";import"./DataViewFilterText.styled-DZ8Q0cPn.js";import"./theme-DWrYR5Gu.js";import"./DataViewFilterNumber.styled-DFPMt5Iy.js";import"./index-BpD74PYt.js";import"./Dialog-CyXhuKHl.js";import"./index-DlwLUsSE.js";import"./SideNav-CvsHqpPT.js";import"./Toggle-BjiP2rWg.js";import"./StyledFormControl.styled-pfNyCqn0.js";import"./RadioButton-D-T1QIB0.js";import"./Snackbar-Bslrzt6A.js";import"./Drawers.styled-DTyGwmUF.js";import"./TopSummary-BwmK9RyY.js";import"./Content.styled-D32KKdYh.js";import"./Popover.styled-CRqgYYyp.js";import"./PageHeader-SBBckNNB.js";import{m as p}from"./options-DEOzrsxm.js";import"./containerQuery-XietOkEy.js";import"./testIds-Dso8kRSM.js";import"./sizes-C6oSOElx.js";import"./generateUtilityClasses-Dav9K5Jg.js";import"./createSvgIcon-Bc8E_7Df.js";import"./Popper-BFIFukJ-.js";import"./ownerWindow-DvT1GKkC.js";import"./useIsFocusVisible-DxTeNLkh.js";import"./createChainedFunction-BO_9K8Jh.js";import"./useTheme-BjWv6DhY.js";import"./index-DCMmMN8S.js";import"./index-ywIwhVjx.js";import"./useId-C6ulm9BR.js";import"./useControlled-0MmPqhal.js";import"./createSvgIcon-ryN2wBPb.js";import"./debounce-G1u4Gy2U.js";import"./formats-sBod7wm8.js";import"./FormControlLabel-D-u7WmCt.js";import"./formControlState-D0eomaiA.js";import"./ButtonBase-B3sVjXKq.js";import"./getThemeProps-DXoot0qR.js";import"./ChevronRight-BWmUBWCy.js";import"./TitleWrapper-CEGR9Ons.js";import"./TitleText-B4ASHioH.js";import"./useToggle-BK_3QGB6.js";import"./ClickAwayListener-MSE9i65R.js";import"./MoreVert-cizeWCO8.js";import"./Spinner-D0BoAIGc.js";import"./DataViewPrimaryFilter-CR1jqifp.js";import"./SubtitleText-DyATjJCY.js";import"./Close-BnT1QDqQ.js";import"./TridentIcon-B5XNHbig.js";import"./Image-VvQrOvIH.js";const Nt={title:"Components/ChipList"},t=({optionCount:o,maxInitialChips:s,hasOnDelete:i})=>{const a=r.useMemo(()=>o>=0?p.slice(0,o):p,[o]),l=r.useMemo(()=>{if(i)return u=>alert(`Option delete. New options: ${JSON.stringify(u)}`)},[i]);return c.jsx(C,{options:a,maxInitialChips:s,onDelete:l})};t.args={optionCount:25,maxInitialChips:8,hasOnDelete:!1};t.argTypes={optionCount:{name:"Number of Options",control:{min:0}},maxInitialChips:{name:"Maximum Initial Chips"},hasOnDelete:{name:"Has onDelete Handler"}};var m,e,n;t.parameters={...t.parameters,docs:{...(m=t.parameters)==null?void 0:m.docs,source:{originalSource:`({
  optionCount,
  maxInitialChips,
  hasOnDelete
}: typeof Playground.args): ReactElement => {
  const options = useMemo<ChipListProps["options"]>(() => {
    return optionCount >= 0 ? mockOptions.slice(0, optionCount) : mockOptions;
  }, [optionCount]);
  const onDelete = useMemo(() => {
    if (!hasOnDelete) {
      return;
    }
    return (options: ChipListProps["options"]) => alert(\`Option delete. New options: \${JSON.stringify(options)}\`);
  }, [hasOnDelete]);
  return <ChipList options={options} maxInitialChips={maxInitialChips} onDelete={onDelete} />;
}`,...(n=(e=t.parameters)==null?void 0:e.docs)==null?void 0:n.source}}};const Pt=["Playground"];export{t as Playground,Pt as __namedExportsOrder,Nt as default};
