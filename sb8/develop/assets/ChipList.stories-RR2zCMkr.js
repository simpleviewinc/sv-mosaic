import{j as c}from"./jsx-runtime-EKYJJIwR.js";import{r}from"./index-D0AnReJb.js";import{C}from"./Form-CgwovX7A.js";import"./Button-DuPZ_syw.js";import"./index-CNJDtwp0.js";import"./DataViewFilterSingleSelect-CxRRntbV.js";import"./ButtonRow-CMfkAXvR.js";import"./Card.styled-Cjmqc-hb.js";import"./Typography-CID4xQqz.js";import"./Checkbox-DEHVDJOM.js";import"./Chip-Q_76qCVq.js";import"./CheckboxList-BpALmPMn.js";import"./DataViewFilterDropdown-CyYL6T5I.js";import"./DataViewPrimaryFilter.styled-Nl7VMvHi.js";import"./useMosaicTranslation-CoWLI8L7.js";import"./DataViewFilterText.styled-BwXpJtNV.js";import"./theme-BSoCkN4E.js";import"./DataViewFilterNumber.styled-BXxqs_-I.js";import"./index-Dzq3_XHF.js";import"./Dialog-q0ujYBl7.js";import"./index-SbGHASQQ.js";import"./SideNav-C5NWEHXm.js";import"./Toggle-ZvDv_3Et.js";import"./StyledFormControl.styled-CN2FC1d6.js";import"./RadioButton-C4GIeT3G.js";import"./Snackbar-v6BtnLJQ.js";import"./Drawers.styled-BezXquF1.js";import"./TopSummary-DZNpReGt.js";import"./Content.styled-C2-VlkM9.js";import"./Popover.styled-ChBXiOkY.js";import"./PageHeader-UTe0naMU.js";import{m as p}from"./options-DEOzrsxm.js";import"./containerQuery-bURHYR7H.js";import"./testIds-Dso8kRSM.js";import"./sizes-C6oSOElx.js";import"./generateUtilityClasses-DR3ZN2W1.js";import"./createSvgIcon-BJqXHHQN.js";import"./Popper-CwglX3X7.js";import"./ownerWindow-DvT1GKkC.js";import"./useIsFocusVisible-CvEUtp4E.js";import"./createChainedFunction-BO_9K8Jh.js";import"./useTheme-D2wr39e0.js";import"./index-Bqzh3Cp6.js";import"./index-SI8xS9YR.js";import"./useId-BgzzDjMB.js";import"./useControlled-DuXZYv4M.js";import"./createSvgIcon-Dkn5Rwb8.js";import"./debounce-jQnfRpl1.js";import"./formats-sBod7wm8.js";import"./FormControlLabel-c62W2Jp9.js";import"./formControlState-DOpihTi1.js";import"./ButtonBase-D151CXhN.js";import"./getThemeProps-jN7SmM6K.js";import"./ChevronRight-BmBn2D1l.js";import"./TitleWrapper-BBj93Dzh.js";import"./TitleText-C3pJVaQd.js";import"./useToggle-RmkKdcfw.js";import"./ClickAwayListener-Dkkr5f_-.js";import"./MoreVert-Bjl-7o6A.js";import"./Spinner-l5n7yqAB.js";import"./DataViewPrimaryFilter-lO5EcG02.js";import"./SubtitleText-Bh4fpen4.js";import"./Close-KkbZKwWJ.js";import"./TridentIcon-D2ALK7IE.js";import"./Image-2FXu7LiK.js";const Nt={title:"Components/ChipList"},t=({optionCount:o,maxInitialChips:s,hasOnDelete:i})=>{const a=r.useMemo(()=>o>=0?p.slice(0,o):p,[o]),l=r.useMemo(()=>{if(i)return u=>alert(`Option delete. New options: ${JSON.stringify(u)}`)},[i]);return c.jsx(C,{options:a,maxInitialChips:s,onDelete:l})};t.args={optionCount:25,maxInitialChips:8,hasOnDelete:!1};t.argTypes={optionCount:{name:"Number of Options",control:{min:0}},maxInitialChips:{name:"Maximum Initial Chips"},hasOnDelete:{name:"Has onDelete Handler"}};var m,e,n;t.parameters={...t.parameters,docs:{...(m=t.parameters)==null?void 0:m.docs,source:{originalSource:`({
  optionCount,
  maxInitialChips,
  hasOnDelete
}: typeof Playground.args): ReactElement => {
  const options = useMemo<ChipListProps["options"]>(() => {
    return optionCount >= 0 ? mockOptions.slice(0, optionCount) : mockOptions;
  }, [optionCount]);
  const onDelete = useMemo(() => {
    if (!hasOnDelete) {
      return;
    }
    return (options: ChipListProps["options"]) => alert(\`Option delete. New options: \${JSON.stringify(options)}\`);
  }, [hasOnDelete]);
  return <ChipList options={options} maxInitialChips={maxInitialChips} onDelete={onDelete} />;
}`,...(n=(e=t.parameters)==null?void 0:e.docs)==null?void 0:n.source}}};const Pt=["Playground"];export{t as Playground,Pt as __namedExportsOrder,Nt as default};
