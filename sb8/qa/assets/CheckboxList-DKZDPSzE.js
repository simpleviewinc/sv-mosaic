import{j as l}from"./jsx-runtime-EKYJJIwR.js";import{r as d}from"./index-DDfD_3TG.js";import{C as y}from"./Checkbox-CL37ymQB.js";import{C as k,s as F}from"./theme-DWrYR5Gu.js";import{c as I}from"./containerQuery-XietOkEy.js";import{g as S,a as N,s as $,b as g,u as E,_ as M,d as R,f as _}from"./generateUtilityClasses-Dav9K5Jg.js";import{u as b,f as L}from"./formControlState-D0eomaiA.js";function P(r,e,s=o=>o){const o=[];for(const t of r)e.some(a=>s(t)===s(a))||o.push(t);for(const t of e)r.some(a=>s(t)===s(a))||o.push(t);return o}function w(r,e){if(e<1)throw new Error(`Chunk size should be more than 0, provided ${e}`);const s=[],o=Math.ceil(r.length/e);for(let t=0;t<e;t++){const a=r.slice(t*o,(t+1)*o);if(!a.length)return s;s.push(a)}return s}function T(r){return S("MuiFormGroup",r)}N("MuiFormGroup",["root","row","error"]);const U=["className","row"],B=r=>{const{classes:e,row:s,error:o}=r;return _({root:["root",s&&"row",o&&"error"]},T,e)},D=$("div",{name:"MuiFormGroup",slot:"Root",overridesResolver:(r,e)=>{const{ownerState:s}=r;return[e.root,s.row&&e.row]}})(({ownerState:r})=>g({display:"flex",flexDirection:"column",flexWrap:"wrap"},r.row&&{flexDirection:"row"})),O=d.forwardRef(function(e,s){const o=E({props:e,name:"MuiFormGroup"}),{className:t,row:a=!1}=o,h=M(o,U),u=b(),n=L({props:o,muiFormControl:u,states:["error"]}),p=g({},o,{row:a,error:n.error}),i=B(p);return l.jsx(D,g({className:R(i.root,t),ownerState:p,ref:s},h))}),z=F(O)`
	container-type: inline-size;
	container-name: ${k.CHECKBOX_LIST};
`,H=F.div`
	${I("md","CHECKBOX_LIST")} {
		display: grid;
		grid-template-columns: repeat(3,minmax(0,1fr));
	}
`,V=r=>{const e=d.useId(),{className:s,checked:o,disabled:t,id:a=e,onBlur:h,onChange:u,options:n,style:p,itemsPerColumn:i=8}=r,G=d.useCallback(({target:C})=>{const{value:f}=C,c=n.find(m=>m.value===f);if(!c)return;const x=P(o||[],[c],m=>m.value);u(x)},[o,u,n]),j=d.useMemo(()=>i<1?[n]:n.length>i*2?w(n,3):n.length>i?w(n,2):[n],[i,n]);return l.jsx(z,{className:`${s??""} listItem`,onBlur:h,style:p,children:l.jsx(H,{children:j.map((C,f)=>l.jsx("div",{children:(C||[]).map(({value:c,label:x},m)=>l.jsx("div",{children:l.jsx(y,{checked:(o||[]).some(v=>v.value===c),label:x,disabled:t,id:`${a}-${f}-${m}`,onChange:G,value:c})},c))},f))})})};export{V as C,O as F};
