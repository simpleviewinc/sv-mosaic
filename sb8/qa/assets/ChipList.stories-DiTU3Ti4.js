import{j as c}from"./jsx-runtime-DiwAibxM.js";import{r}from"./index-Btj5Fd67.js";import{C}from"./Form-tlLz60f9.js";import"./Button-BzJSDP1S.js";import"./index-OYDitjQf.js";import"./DataViewFilterSingleSelect-xyLDjYN6.js";import"./ButtonRow-iQTdUMH8.js";import"./Card.styled-DAtznKE6.js";import"./Typography-iUA5kZEF.js";import"./Checkbox-1rJEaydD.js";import"./Chip-ulzUmfU4.js";import"./CheckboxList-BKgo-y8p.js";import"./DataViewFilterDropdown-CqTisVOW.js";import"./DataViewPrimaryFilter.styled-CTVdcnW9.js";import"./useMosaicTranslation-DPUDh126.js";import"./DataViewFilterText.styled-Ci24YSz1.js";import"./theme-D38K4W-Z.js";import"./DataViewFilterNumber.styled-CiKFQiKg.js";import"./index-Dk1V5coX.js";import"./Dialog-BYWfLX43.js";import"./index-CS6DYxP4.js";import"./SideNav-D2hLlXvZ.js";import"./Toggle-H5i5NPQc.js";import"./StyledFormControl.styled-CNCCtQwC.js";import"./RadioButton-LFlv3WCh.js";import"./Snackbar-CrdURRDn.js";import"./Drawers.styled-wRclmLCI.js";import"./TopSummary-C8DCZXx8.js";import"./Content.styled-CvEeminH.js";import"./Popover.styled-DIA1xMK6.js";import"./PageHeader-C-k19XWk.js";import{m as p}from"./options-C_LXlRBD.js";import"./containerQuery-CksQJzsL.js";import"./testIds-C2FMCy5K.js";import"./sizes-C6oSOElx.js";import"./generateUtilityClasses-B5i8Rs7p.js";import"./createSvgIcon-CM-As40z.js";import"./Popper-BV6MzckQ.js";import"./ownerWindow-DvT1GKkC.js";import"./useIsFocusVisible-DHjyF8IZ.js";import"./createChainedFunction-BO_9K8Jh.js";import"./useTheme-DELdgGyu.js";import"./index-T5NeFSal.js";import"./index-tXhrow7Y.js";import"./useId-DwELyCdS.js";import"./useControlled-D8KJxpyu.js";import"./createSvgIcon-CAs7t9wT.js";import"./debounce-IFS8tfQQ.js";import"./formats-sBod7wm8.js";import"./FormControlLabel-2hVWRnF1.js";import"./formControlState-BAf21Shc.js";import"./ButtonBase-B2xCaBev.js";import"./getThemeProps-Fw47730D.js";import"./ChevronRight-CNo34ydh.js";import"./TitleWrapper-OgvLyBY4.js";import"./TitleText-b_QXd7Yf.js";import"./useToggle-B3mbTfSB.js";import"./ClickAwayListener-DoPvkzLf.js";import"./MoreVert-B1D8IEMN.js";import"./Spinner-C_uMqEwM.js";import"./DataViewPrimaryFilter-Cox9kOZn.js";import"./SubtitleText-BrufIBLI.js";import"./Close-gDfoKZ0c.js";import"./TridentIcon-DUvelBIm.js";import"./Image-CNIFLnmm.js";const Nt={title:"Components/ChipList"},t=({optionCount:o,maxInitialChips:s,hasOnDelete:i})=>{const a=r.useMemo(()=>o>=0?p.slice(0,o):p,[o]),l=r.useMemo(()=>{if(i)return u=>alert(`Option delete. New options: ${JSON.stringify(u)}`)},[i]);return c.jsx(C,{options:a,maxInitialChips:s,onDelete:l})};t.args={optionCount:25,maxInitialChips:8,hasOnDelete:!1};t.argTypes={optionCount:{name:"Number of Options",control:{min:0}},maxInitialChips:{name:"Maximum Initial Chips"},hasOnDelete:{name:"Has onDelete Handler"}};var m,e,n;t.parameters={...t.parameters,docs:{...(m=t.parameters)==null?void 0:m.docs,source:{originalSource:`({
  optionCount,
  maxInitialChips,
  hasOnDelete
}: typeof Playground.args): ReactElement => {
  const options = useMemo<ChipListProps["options"]>(() => {
    return optionCount >= 0 ? mockOptions.slice(0, optionCount) : mockOptions;
  }, [optionCount]);
  const onDelete = useMemo(() => {
    if (!hasOnDelete) {
      return;
    }
    return (options: ChipListProps["options"]) => alert(\`Option delete. New options: \${JSON.stringify(options)}\`);
  }, [hasOnDelete]);
  return <ChipList options={options} maxInitialChips={maxInitialChips} onDelete={onDelete} />;
}`,...(n=(e=t.parameters)==null?void 0:e.docs)==null?void 0:n.source}}};const Pt=["Playground"];export{t as Playground,Pt as __namedExportsOrder,Nt as default};
