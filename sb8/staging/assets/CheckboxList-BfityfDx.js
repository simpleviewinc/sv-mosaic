import{r as d,R as m}from"./index-D0AnReJb.js";import{C as k}from"./Checkbox-CpLxzsg0.js";import{C as G,s as y}from"./sizes-BklZZmo4.js";import{c as I}from"./containerQuery-CZARXB1J.js";import{g as R,a as S,s as b,b as w,u as N,_ as $,d as M,f as _}from"./generateUtilityClasses-rDn4KRfY.js";import{u as j,f as B}from"./formControlState-BAKA1Iy6.js";import{j as L}from"./jsx-runtime-EKYJJIwR.js";function P(r,t,o=e=>e){const e=[];for(const s of r)t.some(a=>o(s)===o(a))||e.push(s);for(const s of t)r.some(a=>o(s)===o(a))||e.push(s);return e}function x(r,t){if(t<1)throw new Error(`Chunk size should be more than 0, provided ${t}`);const o=[],e=Math.ceil(r.length/t);for(let s=0;s<t;s++){const a=r.slice(s*e,(s+1)*e);if(!a.length)return o;o.push(a)}return o}function T(r){return R("MuiFormGroup",r)}S("MuiFormGroup",["root","row","error"]);const U=["className","row"],D=r=>{const{classes:t,row:o,error:e}=r;return _({root:["root",o&&"row",e&&"error"]},T,t)},O=b("div",{name:"MuiFormGroup",slot:"Root",overridesResolver:(r,t)=>{const{ownerState:o}=r;return[t.root,o.row&&t.row]}})(({ownerState:r})=>w({display:"flex",flexDirection:"column",flexWrap:"wrap"},r.row&&{flexDirection:"row"})),z=d.forwardRef(function(t,o){const e=N({props:t,name:"MuiFormGroup"}),{className:s,row:a=!1}=e,C=$(e,U),u=j(),n=B({props:e,muiFormControl:u,states:["error"]}),p=w({},e,{row:a,error:n.error}),l=D(p);return L.jsx(O,w({className:M(l.root,s),ownerState:p,ref:o},C))}),H=y(z)`
	container-type: inline-size;
	container-name: ${G.CHECKBOX_LIST};
`,K=y.div`
	${I("md","CHECKBOX_LIST")} {
		display: grid;
		grid-template-columns: repeat(3,minmax(0,1fr));
	}
`,Y=r=>{const t=d.useId(),{className:o,checked:e,disabled:s,id:a=t,onBlur:C,onChange:u,options:n,style:p,itemsPerColumn:l=8}=r,F=d.useCallback(({target:h})=>{const{value:f}=h,i=n.find(c=>c.value===f);if(!i)return;const g=P(e||[],[i],c=>c.value);u(g)},[e,u,n]),v=d.useMemo(()=>l<1?[n]:n.length>l*2?x(n,3):n.length>l?x(n,2):[n],[l,n]);return m.createElement(H,{className:`${o??""} listItem`,onBlur:C,style:p},m.createElement(K,null,v.map((h,f)=>m.createElement("div",{key:f},(h||[]).map(({value:i,label:g},c)=>m.createElement("div",{key:i},m.createElement(k,{checked:(e||[]).some(E=>E.value===i),label:g,disabled:s,id:`${a}-${f}-${c}`,onChange:F,value:i})))))))};export{Y as C,z as F};
